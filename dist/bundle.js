(()=>{"use strict";var e={56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},72:e=>{var t=[];function n(e){for(var n=-1,i=0;i<t.length;i++)if(t[i].identifier===e){n=i;break}return n}function i(e,i){for(var s={},o=[],r=0;r<e.length;r++){var l=e[r],c=i.base?l[0]+i.base:l[0],d=s[c]||0,m="".concat(c," ").concat(d);s[c]=d+1;var u=n(m),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var h=a(p,i);i.byIndex=r,t.splice(r,0,{identifier:m,updater:h,references:1})}o.push(m)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var s=i(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<s.length;o++){var r=n(s[o]);t[r].references--}for(var l=i(e,a),c=0;c<s.length;c++){var d=n(s[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}s=l}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",i=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),i&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),i&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,i,a,s){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var r=0;r<this.length;r++){var l=this[r][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);i&&o[d[0]]||(void 0!==s&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=s),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),t.push(d))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),s="/*# ".concat(a," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},373:(e,t,n)=>{n.d(t,{A:()=>r});var i=n(354),a=n.n(i),s=n(314),o=n.n(s)()(a());o.push([e.id,".form-container {\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.06);\n  padding: 24px;\n  max-width: 700px;\n  margin: 0 auto;\n  font-family: 'Segoe UI', Arial, sans-serif;\n}\n\n.form-header {\n  margin-bottom: 24px;\n}\n\n.progress-bar {\n  width: 100%;\n  height: 8px;\n  background: #f3f4f6;\n  border-radius: 4px;\n  margin-bottom: 8px;\n  overflow: hidden;\n}\n.progress-fill {\n  height: 100%;\n  background: #3b82f6;\n  border-radius: 4px;\n  transition: width 0.3s;\n}\n.progress-text {\n  font-size: 1rem;\n  color: #555;\n  margin-bottom: 16px;\n}\n\n.form-field {\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n}\n.field-label {\n  font-weight: 600;\n  margin-bottom: 4px;\n  display: flex;\n  align-items: center;\n}\n.field-input {\n  padding: 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 1rem;\n}\n.input-feedback {\n  color: #ef4444;\n  font-size: 0.92rem;\n  margin-top: 2px;\n  display: none;\n}\n.field-valid .input-feedback {\n  color: #10b981;\n}\n.field-help {\n  font-size: 0.92rem;\n  color: #888;\n  margin-top: 2px;\n}\n.btn-primary {\n  background: #3b82f6;\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  padding: 12px 24px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n.btn-primary:disabled {\n  background: #a5b4fc;\n  cursor: not-allowed;\n}\n.btn-secondary {\n  background: #f3f4f6;\n  color: #1e293b;\n  border: 1px solid #cbd5e1;\n  border-radius: 6px;\n  font-size: 1rem;\n  font-weight: 500;\n  padding: 0.75em 1.5em;\n  margin: 0 0 16px 0;\n  cursor: pointer;\n  transition: background 0.2s, color 0.2s;\n}\n.btn-secondary:hover, .btn-secondary:focus {\n  background: #e0e7ef;\n  color: #2563eb;\n  outline: 2px solid #2563eb;\n}\n.btn-loader {\n  display: inline-block;\n  margin-left: 8px;\n}\n.tooltip {\n  position: absolute;\n  background: #222;\n  color: #fff;\n  padding: 6px 12px;\n  border-radius: 6px;\n  font-size: 0.95rem;\n  z-index: 1000;\n  pointer-events: none;\n}\n.help-icon {\n  margin-left: 6px;\n  color: #2563eb;\n  cursor: pointer;\n  font-size: 1.1rem;\n}\n.return-home-btn {\n  float: right;\n  margin-top: 0;\n  margin-bottom: 16px;\n}\n@media (max-width: 600px) {\n  .form-container { padding: 10px; }\n  .form-field { margin-bottom: 14px; }\n  .btn-primary, .btn-secondary { width: 100%; margin-bottom: 8px; }\n}\n\n.form-fields-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 24px 32px;\n  margin-bottom: 24px;\n}\n@media (max-width: 700px) {\n  .form-fields-grid {\n    grid-template-columns: 1fr;\n    gap: 20px 0;\n  }\n} ","",{version:3,sources:["webpack://./src/components/shared-form-styles.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,sCAAsC;EACtC,aAAa;EACb,gBAAgB;EAChB,cAAc;EACd,0CAA0C;AAC5C;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;AAClB;AACA;EACE,YAAY;EACZ,mBAAmB;EACnB,kBAAkB;EAClB,sBAAsB;AACxB;AACA;EACE,eAAe;EACf,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,mBAAmB;AACrB;AACA;EACE,aAAa;EACb,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;AACjB;AACA;EACE,cAAc;EACd,kBAAkB;EAClB,eAAe;EACf,aAAa;AACf;AACA;EACE,cAAc;AAChB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,eAAe;AACjB;AACA;EACE,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,2BAA2B;AAC7B;AACA;EACE,mBAAmB;EACnB,mBAAmB;AACrB;AACA;EACE,mBAAmB;EACnB,cAAc;EACd,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;EACf,gBAAgB;EAChB,qBAAqB;EACrB,kBAAkB;EAClB,eAAe;EACf,uCAAuC;AACzC;AACA;EACE,mBAAmB;EACnB,cAAc;EACd,0BAA0B;AAC5B;AACA;EACE,qBAAqB;EACrB,gBAAgB;AAClB;AACA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,WAAW;EACX,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,aAAa;EACb,oBAAoB;AACtB;AACA;EACE,gBAAgB;EAChB,cAAc;EACd,eAAe;EACf,iBAAiB;AACnB;AACA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;AACrB;AACA;EACE,kBAAkB,aAAa,EAAE;EACjC,cAAc,mBAAmB,EAAE;EACnC,+BAA+B,WAAW,EAAE,kBAAkB,EAAE;AAClE;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,cAAc;EACd,mBAAmB;AACrB;AACA;EACE;IACE,0BAA0B;IAC1B,WAAW;EACb;AACF",sourcesContent:[".form-container {\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.06);\r\n  padding: 24px;\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n  font-family: 'Segoe UI', Arial, sans-serif;\r\n}\r\n\r\n.form-header {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 8px;\r\n  background: #f3f4f6;\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n  overflow: hidden;\r\n}\r\n.progress-fill {\r\n  height: 100%;\r\n  background: #3b82f6;\r\n  border-radius: 4px;\r\n  transition: width 0.3s;\r\n}\r\n.progress-text {\r\n  font-size: 1rem;\r\n  color: #555;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.form-field {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.field-label {\r\n  font-weight: 600;\r\n  margin-bottom: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.field-input {\r\n  padding: 10px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n}\r\n.input-feedback {\r\n  color: #ef4444;\r\n  font-size: 0.92rem;\r\n  margin-top: 2px;\r\n  display: none;\r\n}\r\n.field-valid .input-feedback {\r\n  color: #10b981;\r\n}\r\n.field-help {\r\n  font-size: 0.92rem;\r\n  color: #888;\r\n  margin-top: 2px;\r\n}\r\n.btn-primary {\r\n  background: #3b82f6;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 12px 24px;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n}\r\n.btn-primary:disabled {\r\n  background: #a5b4fc;\r\n  cursor: not-allowed;\r\n}\r\n.btn-secondary {\r\n  background: #f3f4f6;\r\n  color: #1e293b;\r\n  border: 1px solid #cbd5e1;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  padding: 0.75em 1.5em;\r\n  margin: 0 0 16px 0;\r\n  cursor: pointer;\r\n  transition: background 0.2s, color 0.2s;\r\n}\r\n.btn-secondary:hover, .btn-secondary:focus {\r\n  background: #e0e7ef;\r\n  color: #2563eb;\r\n  outline: 2px solid #2563eb;\r\n}\r\n.btn-loader {\r\n  display: inline-block;\r\n  margin-left: 8px;\r\n}\r\n.tooltip {\r\n  position: absolute;\r\n  background: #222;\r\n  color: #fff;\r\n  padding: 6px 12px;\r\n  border-radius: 6px;\r\n  font-size: 0.95rem;\r\n  z-index: 1000;\r\n  pointer-events: none;\r\n}\r\n.help-icon {\r\n  margin-left: 6px;\r\n  color: #2563eb;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n}\r\n.return-home-btn {\r\n  float: right;\r\n  margin-top: 0;\r\n  margin-bottom: 16px;\r\n}\r\n@media (max-width: 600px) {\r\n  .form-container { padding: 10px; }\r\n  .form-field { margin-bottom: 14px; }\r\n  .btn-primary, .btn-secondary { width: 100%; margin-bottom: 8px; }\r\n}\r\n\r\n.form-fields-grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 24px 32px;\r\n  margin-bottom: 24px;\r\n}\r\n@media (max-width: 700px) {\r\n  .form-fields-grid {\r\n    grid-template-columns: 1fr;\r\n    gap: 20px 0;\r\n  }\r\n} "],sourceRoot:""}]);const r=o},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},659:e=>{var t={};e.exports=function(e,n){var i=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,a&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(i,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}}},t={};function n(i){var a=t[i];if(void 0!==a)return a.exports;var s=t[i]={id:i,exports:{}};return e[i](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;class i{static generateRecommendations(e,t){let n=[];const{keyMetrics:i}=e;var a,s,o,r,l,c;return"number"==typeof t.assets.checking&&"number"==typeof t.assets.savings&&"number"==typeof t.assets.emergencyFund&&"number"==typeof t.expenses.housing&&"number"==typeof t.expenses.food&&"number"==typeof t.expenses.transportation&&"number"==typeof t.expenses.utilities&&n.push(...function(e,t){if("number"!=typeof e||isNaN(e)||"number"!=typeof t||isNaN(t)||t<=0)return[];const n=e/t;if(n>=3)return[];const i=Math.max(0,(3-n)*t);return[{id:"emergency-fund-quick",category:"savings",priority:"high",title:"Build Your Emergency Fund",description:`You have ${n.toFixed(1)} months of expenses saved. Aim for at least 3 months for a basic safety net. You need to save about ${a=i,"number"!=typeof a||isNaN(a)?"N/A":0===a?"$0":new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",minimumFractionDigits:0,maximumFractionDigits:0}).format(a)} more.`,actionSteps:["Set up an automatic transfer to savings each payday.","Pause non-essential spending until you reach your goal."],timeframe:"1-3-months",impactLevel:"high"}];var a}((t.assets.checking||0)+(t.assets.savings||0)+(t.assets.emergencyFund||0),(t.expenses.housing||0)+(t.expenses.food||0)+(t.expenses.transportation||0)+(t.expenses.utilities||0))),"number"!=typeof i.debtToIncomeRatio||isNaN(i.debtToIncomeRatio)||n.push(...(a=i.debtToIncomeRatio,"number"!=typeof a||isNaN(a)||a<36?[]:[{id:"dti-quick",category:"debt",priority:"high",title:"Reduce Your Debt-to-Income Ratio",description:`Your debt-to-income ratio is ${a.toFixed(1)}%. Aim to keep this below 36% for financial stability.`,actionSteps:["Prioritize paying down high-interest debt.","Avoid taking on new debt until your ratio is below 36%."],timeframe:"next-3-months",impactLevel:"high"}])),"number"!=typeof i.savingsRate||isNaN(i.savingsRate)||n.push(...(s=i.savingsRate,"number"!=typeof s||isNaN(s)||s>=10?[]:[{id:"savings-rate-quick",category:"savings",priority:"medium",title:"Increase Your Savings Rate",description:`Your savings rate is ${s.toFixed(1)}%. Aim for at least 10% of your income to build long-term security.`,actionSteps:["Increase your savings by 1% each month.","Direct any windfalls or bonuses to savings."],timeframe:"ongoing",impactLevel:"medium"}])),"number"!=typeof i.monthlyCashFlow||isNaN(i.monthlyCashFlow)||n.push(...(o=i.monthlyCashFlow,"number"!=typeof o||isNaN(o)||o>=0?[]:[{id:"negative-cash-flow-quick",category:"spending",priority:"high",title:"Address Negative Cash Flow",description:"You are spending more than you earn each month. Immediate action is needed to avoid debt and financial stress.",actionSteps:["Track all spending for 30 days to identify areas to cut.","Create a strict budget and stick to it."],timeframe:"next-30-days",impactLevel:"high"}])),"number"!=typeof t.liabilities.creditScore||isNaN(t.liabilities.creditScore)||n.push(...(r=t.liabilities.creditScore,"number"!=typeof r||isNaN(r)||r>=670?[]:[{id:"credit-score-quick",category:"credit",priority:"medium",title:"Improve Your Credit Score",description:`Your credit score is ${r}. Focus on on-time payments and reducing credit card balances to improve your score.`,actionSteps:["Pay all bills on time every month.","Pay down credit card balances below 30% of your limit."],timeframe:"next-3-months",impactLevel:"medium"}])),this.isQuickAnalysis(t)&&("number"==typeof t.expenses.housing&&"number"==typeof t.income.primarySalary&&n.push(...function(e,t){if("number"!=typeof e||isNaN(e)||"number"!=typeof t||isNaN(t)||t<=0)return[];const n=e/t*100;return n<=30?[]:[{id:"housing-cost-ratio-quick",category:"spending",priority:"medium",title:"Reduce Your Housing Cost Ratio",description:`Your housing costs are ${n.toFixed(1)}% of your income. Aim to keep this below 30% for long-term affordability.`,actionSteps:["Consider refinancing, downsizing, or negotiating rent.","Look for ways to increase income or reduce other expenses."],timeframe:"next-3-months",impactLevel:"medium"}]}(t.expenses.housing||0,t.income.primarySalary||0)),"number"==typeof t.income.primarySalary&&"number"==typeof t.expenses.food&&"number"==typeof t.expenses.transportation&&"number"==typeof t.expenses.utilities&&"number"==typeof t.assets.checking&&"number"==typeof t.assets.savings&&"number"==typeof t.assets.emergencyFund&&n.push(...function(e,t,n){if("number"!=typeof e||isNaN(e)||e<=0||"number"!=typeof t||isNaN(t)||t<0||"number"!=typeof n||isNaN(n)||n<0)return[];const i=n/(e+t);return i>=6?[]:i<1?[{id:"combined-insight-critical",category:"savings",priority:"high",title:"Critical: No Financial Cushion",description:"You have less than one month of expenses saved. This puts you at high risk for financial hardship. Build a safety net immediately.",actionSteps:["Pause all non-essential spending.","Set up an emergency fund as your top priority."],timeframe:"immediate",impactLevel:"high"}]:[{id:"combined-insight-warning",category:"savings",priority:"medium",title:"Increase Your Financial Cushion",description:`You have ${i.toFixed(1)} months of expenses saved. Aim for at least 3-6 months for greater security.`,actionSteps:["Increase your monthly savings rate.","Automate transfers to your savings account."],timeframe:"next-3-months",impactLevel:"medium"}]}(t.income.primarySalary||0,t.expenses.food+t.expenses.transportation+t.expenses.utilities||0,(t.assets.checking||0)+(t.assets.savings||0)+(t.assets.emergencyFund||0)))),this.isComprehensiveAnalysis(t)&&(n.push(...(l=t.assets,c=t.personalInfo.age,"number"!=typeof c||isNaN(c)||(l.employer401k||0)+(l.traditionalIRA||0)+(l.rothIRA||0)+(l.brokerageAccounts||0)+(l.stocks||0)+(l.bonds||0)+(l.mutualFunds||0)<=0?[]:[{id:"investment-diversification",category:"investment",priority:"medium",title:"Diversify Your Investments",description:`Review your asset allocation. A common rule is to keep about ${110-c}% of your portfolio in stocks for your age.`,actionSteps:["Rebalance your portfolio to match your risk tolerance and goals.","Consider low-cost index funds or ETFs for diversification."],timeframe:"next-3-months",impactLevel:"medium"}])),n.push(...function(e,t){if("number"!=typeof t||isNaN(t))return[];const n=[];return e.healthInsurance||n.push({id:"insurance-health",category:"risk",priority:"high",title:"Get Health Insurance Coverage",description:"Health insurance is essential to protect against catastrophic medical costs.",actionSteps:["Enroll in a health insurance plan as soon as possible."],timeframe:"immediate",impactLevel:"high"}),t>0&&!e.lifeInsurance&&n.push({id:"insurance-life",category:"risk",priority:"high",title:"Get Life Insurance for Your Dependents",description:"Life insurance is critical to protect your family if something happens to you.",actionSteps:["Get quotes for term life insurance and choose a policy that covers at least 10x your income."],timeframe:"next-30-days",impactLevel:"high"}),n}(t.insurance,t.personalInfo.dependents))),n.sort(((e,t)=>{const n={high:0,medium:1,low:2};return n[e.priority]-n[t.priority]})),Array.from(new Map(n.map((e=>[e.id,e]))).values()).slice(0,10)}static isQuickAnalysis(e){const t="number"==typeof e.income.primarySalary&&"number"==typeof e.expenses.housing&&"number"==typeof e.assets.checking&&"number"==typeof e.liabilities.creditCardDebt&&"number"==typeof e.liabilities.creditScore,n="number"==typeof e.income.secondaryIncome&&"number"==typeof e.assets.employer401k;return t&&!n}static isComprehensiveAnalysis(e){return"number"==typeof e.income.secondaryIncome&&"number"==typeof e.assets.employer401k}}class a{static analyzeFinancialHealth(e){this.validateUserData(e);const t=this.calculateKeyMetrics(e),n=this.calculateHealthIndicators(e,t),a=this.calculateOverallHealthScore(n),s={overallHealthScore:a,healthLevel:this.getHealthLevel(a),healthIndicators:n,keyMetrics:t,liquidityAnalysis:this.analyzeLiquidity(e,t),debtAnalysis:this.analyzeDebt(e,t),investmentAnalysis:this.analyzeInvestments(e,t),insuranceAnalysis:this.analyzeInsurance(e),wealthProjections:this.projectWealth(e,t),scenarioAnalysis:this.analyzeScenarios(e,t),prioritizedRecommendations:[],peerBenchmarks:this.calculatePeerBenchmarks(e),detailedInsights:this.generateDetailedInsights(e,t,n),financialRatios:this.calculateFinancialRatios(e,t),riskAssessment:this.assessFinancialRisk(e,t),goalAnalysis:this.analyzeFinancialGoals(e,t)};return s.prioritizedRecommendations=i.generateRecommendations(s,e),s}static calculateKeyMetrics(e){const t=this.getTotalMonthlyIncome(e.income),n=this.getTotalMonthlyExpenses(e.expenses),i=t-n,a=this.getTotalAssets(e.assets),s=this.getTotalLiabilities(e.liabilities),o="number"!=typeof a||"number"!=typeof s||isNaN(a)||isNaN(s)?0:a-s,r=(e.assets.checking||0)+(e.assets.savings||0)+(e.assets.moneyMarket||0)+(e.assets.emergencyFund||0),l=this.getTotalDebt(e.liabilities),c=t>0?l/t*100:l>0?100:0,d={totalAssets:a,totalLiabilities:s,netWorth:o},m={totalDebt:l,totalIncome:t,debtToIncomeRatio:c};return{monthlyCashFlow:isNaN(i)?0:i,emergencyFundMonths:n>0&&r>=0?r/n:0,debtToIncomeRatio:c,dtiBreakdown:m,savingsRate:t>0?(i-(e.behaviors?.monthlyInvestmentContribution||0))/t*100:0,creditUtilization:e.liabilities.totalCreditLimit>0?e.liabilities.creditCardDebt/e.liabilities.totalCreditLimit*100:0,netWorth:o,netWorthBreakdown:d,liquidityRatio:s>0?r/s:r>0?100:0,assetAllocationScore:this.calculateAssetAllocationScore(e)}}static calculateHealthIndicators(e,t){return[this.analyzeSpendingVsIncome(e,t),this.analyzeBillPaymentReliability(e),this.analyzeEmergencySavings(e,t),this.analyzeDebtManagement(e),this.analyzeCreditHealth(e,t),this.analyzeInsuranceConfidence(e),this.analyzeLongTermGoalConfidence(e),this.analyzeFinancialPlanningEngagement(e)]}static analyzeSpendingVsIncome(e,t){const n=this.getTotalMonthlyIncome(e.income),i=n>0?t.monthlyCashFlow/n*100:0;let a=0,s="critical";return i>=20?(a=100,s="excellent"):i>=10?(a=80,s="good"):i>=5?(a=60,s="fair"):i>0?(a=40,s="poor"):(a=0,s="critical"),{name:"Spending vs Income",score:a,status:s,weight:15,metrics:[{title:"Monthly Cash Flow",value:this.formatCurrency(t.monthlyCashFlow),numericValue:t.monthlyCashFlow,description:"Amount left after all expenses",status:s,benchmark:"Target: 20% of income",improvement:i<20?"Consider reducing expenses or increasing income":void 0},{title:"Cash Flow Ratio",value:`${i.toFixed(1)}%`,numericValue:i,description:"Percentage of income available after expenses",status:s,benchmark:"Excellent: 20%+, Good: 10-19%"}],recommendations:this.getSpendingRecommendations(i),explanation:`This indicator measures if you spend less than you earn. Your cash flow ratio is ${i.toFixed(1)}%, resulting in a score of ${a}/100. A healthy ratio is typically above 10-20%.`}}static analyzeBillPaymentReliability(e){const t=e.behaviors.billPaymentReliability;let n=0,i="critical";switch(t){case"always-on-time":n=100,i="excellent";break;case"usually-on-time":n=75,i="good";break;case"sometimes-late":n=50,i="fair";break;case"often-late":n=25,i="poor";break;default:n=0,i="critical"}return{name:"Bill Payment Reliability",score:n,status:i,weight:15,metrics:[{title:"Payment History",value:this.formatReliabilityText(t),description:"Consistency of bill payments",status:i,benchmark:"Target: Always on time"},{title:"Credit Score Impact",value:e.liabilities.creditScore.toString(),numericValue:e.liabilities.creditScore,description:"Current credit score",status:this.getCreditScoreStatus(e.liabilities.creditScore),benchmark:"Excellent: 800+, Good: 740-799, Fair: 670-739"}],recommendations:this.getPaymentReliabilityRecommendations(t),explanation:`This indicator reflects your consistency in paying bills on time. Your self-reported reliability is '${this.formatReliabilityText(t)}', leading to a score of ${n}/100. On-time payments are crucial for a good credit score.`}}static analyzeDebtManagement(e){const t=this.getTotalMonthlyIncome(e.income),n=this.getTotalDebt(e.liabilities);let i=0,a="critical",s="",o=[];return t>0?(i=n/t,i<.2?(a="excellent",s="Your debt-to-income ratio is well below recommended thresholds."):i<.28?(a="good",s="Your debt-to-income ratio is healthy and manageable."):i<.36?(a="fair",s="Your debt-to-income ratio is approaching risk thresholds."):i<.43?(a="poor",s="Your debt-to-income ratio is above recommended limits. Consider reducing debt."):(a="critical",s="Your debt-to-income ratio is dangerously high. Immediate action is needed.")):(i=n>0?1:0,a=n>0?"critical":"excellent",s=n>0?"No reported income but outstanding debts. Address income or debt immediately.":"No income or debt reported."),o=this.getDebtManagementRecommendations(i),{name:"Debt Management Effectiveness",score:Math.max(0,100-Math.round(100*i)),status:a,weight:.15,metrics:[{title:"Debt-to-Income Ratio",value:(100*i).toFixed(1)+"%",numericValue:i,description:"Total monthly debt payments as a percentage of monthly income",status:a,benchmark:"<36%",improvement:"excellent"===a?"":"Reduce debt or increase income to improve ratio."}],recommendations:o,explanation:s}}static getTotalMonthlyIncome(e){return e.primarySalary+e.secondaryIncome+e.businessIncome+e.investmentIncome+e.rentalIncome+e.benefitsIncome+e.otherIncome}static getTotalMonthlyExpenses(e){return e.housing+e.utilities+e.insurance+e.loanPayments+e.childcare+e.food+e.transportation+e.healthcare+e.clothing+e.personalCare+e.entertainment+e.diningOut+e.hobbies+e.subscriptions+e.shopping+e.travel+e.creditCardPayments+e.studentLoanPayments+e.otherDebtPayments}static getTotalAssets(e){return(e.checking||0)+(e.savings||0)+(e.moneyMarket||0)+(e.emergencyFund||0)+(e.employer401k||0)+(e.traditionalIRA||0)+(e.rothIRA||0)+(e.brokerageAccounts||0)+(e.stocks||0)+(e.bonds||0)+(e.mutualFunds||0)+(e.primaryResidence||0)+(e.investmentProperties||0)+(e.cryptocurrency||0)+(e.preciousMetals||0)+(e.collectibles||0)+(e.businessEquity||0)+(e.otherAssets||0)}static getTotalDebt(e){return e&&"object"==typeof e?["mortgageBalance","homeEquityLoan","autoLoans","securedCreditLines","creditCardDebt","personalLoans","studentLoans","medicalDebt","businessLoans","businessCreditLines","taxDebt","legalJudgments","otherDebt"].reduce(((t,n)=>t+(Number(e[n])||0)),0):0}static getTotalLiabilities(e){return["mortgageBalance","homeEquityLoan","autoLoans","securedCreditLines","creditCardDebt","personalLoans","studentLoans","medicalDebt","businessLoans","businessCreditLines","taxDebt","legalJudgments","otherDebt"].reduce(((t,n)=>t+(Number(e[n])||0)),0)}static formatCurrency(e){return"number"!=typeof e||isNaN(e)?"N/A":0===e?"$0":new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",minimumFractionDigits:0,maximumFractionDigits:0}).format(e)}static formatReliabilityText(e){return{"always-on-time":"Always On Time","usually-on-time":"Usually On Time","sometimes-late":"Sometimes Late","often-late":"Often Late"}[e]||e}static calculateOverallHealthScore(e){let t=0,n=0;for(const i of e)t+=i.score*i.weight,n+=i.weight;return n>0?Math.round(t/n):0}static getHealthLevel(e){return e>=80?"excellent":e>=65?"good":e>=50?"fair":e>=35?"limited":"critical"}static analyzeEmergencySavings(e,t){const n=t.emergencyFundMonths;let i=0,a="critical";return n>=6?(i=100,a="excellent"):n>=3?(i=80,a="good"):n>=1?(i=60,a="fair"):n>0?(i=30,a="poor"):(i=0,a="critical"),{name:"Emergency Savings",score:i,status:a,weight:20,metrics:[{title:"Emergency Fund Coverage",value:`${n.toFixed(1)} months`,numericValue:n,description:"How many months of expenses your liquid savings can cover",status:a,benchmark:"Target: 3-6 months"},{title:"Total Liquid Assets",value:this.formatCurrency(e.assets.checking+e.assets.savings+e.assets.moneyMarket+e.assets.emergencyFund),numericValue:e.assets.checking+e.assets.savings+e.assets.moneyMarket+e.assets.emergencyFund,description:"Cash and easily accessible funds",status:a}],recommendations:this.getEmergencyFundRecommendations(n,this.getTotalMonthlyExpenses(e.expenses)),explanation:`This measures your financial cushion for unexpected events. You have ${n.toFixed(1)} months of expenses saved, giving you a score of ${i}/100. The standard recommendation is 3-6 months.`}}static analyzeCreditHealth(e,t){const n=e.liabilities.creditScore,i=t.creditUtilization;let a=0,s="critical";return n>=800&&i<=10?(a=100,s="excellent"):n>=740&&i<=30?(a=80,s="good"):n>=670?(a=60,s="fair"):n>=580?(a=40,s="poor"):(a=20,s="critical"),{name:"Credit Health",score:a,status:s,weight:10,metrics:[{title:"Credit Score",value:n.toString(),numericValue:n,description:"Your current credit score",status:this.getCreditScoreStatus(n),benchmark:"Excellent: 800+, Good: 740-799, Fair: 670-739"},{title:"Credit Utilization",value:`${i.toFixed(1)}%`,numericValue:i,description:"Percentage of available credit you are using",status:this.getCreditUtilizationStatus(t.creditUtilization),benchmark:"Target: Below 30%"}],recommendations:this.getCreditHealthRecommendations(e.liabilities.creditScore,t.creditUtilization),explanation:`This reflects your creditworthiness. With a credit score of ${e.liabilities.creditScore} and a utilization of ${t.creditUtilization.toFixed(1)}%, your score is ${a}/100. Both are key factors in your financial health.`}}static analyzeInsuranceConfidence(e){const t=e.insurance.healthInsurance,n=e.insurance.lifeInsurance,i=e.insurance.shortTermDisability||e.insurance.longTermDisability,a=e.insurance.insuranceConfidence;let s=0,o="critical";const r=(t?1:0)+(n?1:0)+(i?1:0);return 3===r&&"very-confident"===a?(s=100,o="excellent"):r>=2&&"not-confident"!==a?(s=80,o="good"):r>=1?(s=60,o="fair"):t?(s=40,o="poor"):(s=20,o="critical"),{name:"Insurance Confidence",score:s,status:o,weight:10,metrics:[{title:"Self-Reported Confidence",value:this.formatConfidenceText(a),description:"Your confidence in your insurance coverage",status:o}],recommendations:this.getInsuranceRecommendations(e.insurance),explanation:`This measures your confidence in being protected from financial shocks. Your reported confidence level gives you a score of ${s}/100.`}}static analyzeLongTermGoalConfidence(e){const t=e.goals.retirementConfidence,n=e.assets.employer401k+e.assets.traditionalIRA+e.assets.rothIRA>0,i=e.behaviors.monthlyInvestmentContribution;let a=0,s="critical";return"very-confident"===t&&n&&i>0?(a=100,s="excellent"):"somewhat-confident"===t&&n?(a=75,s="good"):n||i>0?(a=50,s="fair"):"not-confident"!==t?(a=25,s="poor"):(a=0,s="critical"),{name:"Long-term Goal Confidence",score:a,status:s,weight:10,metrics:[{title:"Retirement Confidence",value:this.formatConfidenceText(t),description:"Your confidence in your retirement savings plan",status:s,benchmark:"Target: Very confident with active saving"},{title:"Monthly Investment",value:this.formatCurrency(i),numericValue:i,description:"Monthly investment contribution",status:i>500?"excellent":i>0?"good":"poor",benchmark:"Target: 10-15% of income"}],recommendations:this.getRetirementRecommendations(e.goals,i),explanation:`This assesses your confidence in reaching long-term financial goals like retirement. Your reported confidence results in a score of ${a}/100.`}}static analyzeFinancialPlanningEngagement(e){const t=e.behaviors.budgetingMethod,n=e.behaviors.financialPlanningEngagement;let i=0;switch(t){case"detailed-budget":i=100;break;case"simple-tracking":i=75;break;case"mental-budget":i=40;break;case"no-budget":i=0}let a=0;switch(n){case"actively-plan":a=100;break;case"occasionally-plan":a=70;break;case"rarely-plan":a=30;break;case"never-plan":a=0}const s=Math.round(.5*i+.5*a);let o="critical";return s>=90?o="excellent":s>=70?o="good":s>=50?o="fair":s>=20&&(o="poor"),{name:"Financial Planning Engagement",score:s,status:o,weight:10,metrics:[{title:"Budgeting Method",value:this.formatBudgetText(t),description:"How you manage your budget",status:s>=70?"good":"poor"},{title:"Planning Engagement",value:this.formatPlanningText(n),description:"How actively you plan your finances",status:s>=70?"good":"poor"}],recommendations:this.getPlanningRecommendations(t,n),explanation:`This measures how actively you are planning and tracking your finances. Your approach gives you a score of ${s}/100.`}}static calculateAssetAllocationScore(e){const t=e.assets.employer401k+e.assets.traditionalIRA+e.assets.rothIRA+e.assets.brokerageAccounts+e.assets.stocks,n=this.getTotalAssets(e.assets);if(0===n)return 0;const i=t/n,a=(100-e.personalInfo.age)/100,s=Math.max(0,100-200*Math.abs(i-a));return Math.round(s)}static analyzeLiquidity(e,t){const n=e.assets.checking+e.assets.savings+e.assets.moneyMarket+e.assets.emergencyFund,i=this.getTotalMonthlyExpenses(e.expenses),a=i>0?n/i:0;return[{title:"Liquid Assets",value:this.formatCurrency(n),numericValue:n,description:"Cash and cash equivalents available immediately",status:n>=6*i?"excellent":n>=3*i?"good":"poor",benchmark:"Target: 6+ months of expenses"},{title:"Liquidity Ratio",value:`${a.toFixed(1)} months`,numericValue:a,description:"Months of expenses covered by liquid assets",status:a>=6?"excellent":a>=3?"good":"poor",benchmark:"Excellent: 6+ months, Good: 3-6 months"}]}static analyzeDebt(e,t){const n=this.getTotalDebt(e.liabilities),i=t.debtToIncomeRatio,a=t.creditUtilization;return[{title:"Total Debt",value:this.formatCurrency(n),numericValue:n,description:"All outstanding debt obligations",status:i<=20?"excellent":i<=36?"good":"poor",benchmark:"Target: <20% of annual income"},{title:"Debt-to-Income Ratio",value:`${i.toFixed(1)}%`,numericValue:i,description:"Total debt as percentage of annual income",status:i<=20?"excellent":i<=36?"good":"poor",benchmark:"Excellent: <20%, Good: 20-36%, Poor: >36%"},{title:"Credit Utilization",value:`${a.toFixed(1)}%`,numericValue:a,description:"Credit card balances vs available credit",status:a<=10?"excellent":a<=30?"good":"poor",benchmark:"Excellent: <10%, Good: 10-30%, Poor: >30%"}]}static analyzeInvestments(e,t){const n=e.assets.employer401k+e.assets.traditionalIRA+e.assets.rothIRA+e.assets.brokerageAccounts+e.assets.stocks+e.assets.bonds+e.assets.mutualFunds,i=this.getTotalMonthlyIncome(e.income),a=i>0?e.behaviors.monthlyInvestmentContribution/i*100:0,s=e.personalInfo.age,o=110-s;return[{title:"Total Investments",value:this.formatCurrency(n),numericValue:n,description:"All investment accounts and securities",status:a>=15?"excellent":a>=10?"good":"poor",benchmark:"Target: 15%+ of income invested monthly"},{title:"Investment Rate",value:`${a.toFixed(1)}%`,numericValue:a,description:"Monthly investment as percentage of income",status:a>=15?"excellent":a>=10?"good":"poor",benchmark:"Excellent: 15%+, Good: 10-15%, Poor: <10%"},{title:"Asset Allocation Score",value:`${t.assetAllocationScore}/100`,numericValue:t.assetAllocationScore,description:"How well diversified your investments are",status:t.assetAllocationScore>=80?"excellent":t.assetAllocationScore>=60?"good":"poor",benchmark:`Target stock allocation for age ${s}: ~${o}%`}]}static analyzeInsurance(e){const t=e.personalInfo.healthInsurance,n=e.personalInfo.lifeInsurance,i=e.personalInfo.shortTermDisability||e.personalInfo.longTermDisability,a=e.personalInfo.dependents,s=(t?40:0)+(n&&a>0||0===a?30:0)+(i?30:0);return[{title:"Insurance Coverage Score",value:`${s}/100`,numericValue:s,description:"Overall adequacy of insurance protection",status:s>=90?"excellent":s>=70?"good":"poor",benchmark:"Target: 90+ (Health + Life + Disability)"},{title:"Essential Coverage",value:t?"Health ✓":"Health ✗",description:"Health insurance status",status:t?"excellent":"critical",benchmark:"Required: Health insurance is essential"},{title:"Income Protection",value:i?"Disability ✓":"Disability ✗",description:"Disability insurance status",status:i?"good":"poor",benchmark:"Recommended: Protect 60-70% of income"}]}static projectWealth(e,t){const n=e.personalInfo.age,i=e.goals.retirementAge-n,a=e.behaviors.monthlyInvestmentContribution,s=e.assets.employer401k+e.assets.traditionalIRA+e.assets.rothIRA+e.assets.brokerageAccounts,o=[];return[{name:"Conservative (6%)",rate:.06},{name:"Moderate (8%)",rate:.08},{name:"Aggressive (10%)",rate:.1}].forEach((e=>{const t=e.rate/12,n=12*i,r=s*Math.pow(1+e.rate,i)+a*((Math.pow(1+t,n)-1)/t);o.push({scenario:e.name,timeframe:`${i} years`,projectedValue:r,monthlyContribution:a,assumptions:`${(100*e.rate).toFixed(0)}% annual return, ${a>0?"$"+a.toLocaleString():"$0"} monthly`})})),o}static analyzeScenarios(e,t){const n=this.getTotalMonthlyExpenses(e.expenses),i=e.assets.emergencyFund+e.assets.savings;return[{scenario:"Job Loss",impact:"High",description:"Complete loss of primary income",timeToRecover:i>0?`${(i/n).toFixed(1)} months`:"0 months",recommendations:["Build emergency fund to 6 months of expenses","Consider disability insurance","Diversify income sources"],probability:"Medium"},{scenario:"Market Downturn (-30%)",impact:"Medium",description:"30% decline in investment portfolio",timeToRecover:"2-3 years historically",recommendations:["Maintain diversified portfolio","Continue regular investing (dollar-cost averaging)","Avoid panic selling"],probability:"High (occurs every 5-10 years)"},{scenario:"Major Medical Emergency",impact:"High",description:"Unexpected medical expenses",timeToRecover:"Depends on insurance coverage",recommendations:["Ensure adequate health insurance","Build separate medical emergency fund","Consider HSA contributions"],probability:"Medium"}]}static generateDetailedInsights(e,t,n){const i=e.assets||{},a=e.liabilities||{},s=e.expenses||{},o={"401k":i.employer401k||0,IRA:(i.traditionalIRA||0)+(i.rothIRA||0),Brokerage:i.brokerageAccounts||0,Stocks:i.stocks||0,Bonds:i.bonds||0,"Mutual Funds":i.mutualFunds||0,Crypto:i.cryptocurrency||0,"Real Estate":i.primaryResidence||0+i.investmentProperties||0},r={"Secured Debt":(a.mortgageBalance||0)+(a.homeEquityLoan||0)+(a.autoLoans||0)+(a.securedCreditLines||0),"Unsecured Debt":(a.creditCardDebt||0)+(a.personalLoans||0)+(a.studentLoans||0)+(a.medicalDebt||0),"Business Debt":(a.businessLoans||0)+(a.businessCreditLines||0),"Other Debt":(a.taxDebt||0)+(a.legalJudgments||0)+(a.otherDebt||0)},l={Fixed:(s.housing||0)+(s.utilities||0)+(s.insurance||0)+(s.loanPayments||0)+(s.childcare||0),Variable:(s.food||0)+(s.transportation||0)+(s.healthcare||0)+(s.clothing||0)+(s.personalCare||0),Discretionary:(s.entertainment||0)+(s.diningOut||0)+(s.hobbies||0)+(s.subscriptions||0)+(s.shopping||0)+(s.travel||0)};return{netWorthBreakdown:{totalAssets:this.getTotalAssets(i),totalLiabilities:this.getTotalLiabilities(a),netWorth:t.netWorth},savingsRate:t.savingsRate,debtStructure:r,expenseCategories:l,investmentBreakdown:o,insuranceAdequacy:e.insurance||{},peerBenchmarks:t.peerBenchmarks||{},scenarioAnalysis:t.scenarioAnalysis||[]}}static calculateFinancialRatios(e,t){const n=this.getTotalMonthlyIncome(e.income),i=this.getTotalMonthlyExpenses(e.expenses),a=this.getTotalAssets(e.assets),s=this.getTotalLiabilities(e.liabilities);return{liquidityRatios:{currentRatio:s>0?(e.assets.checking+e.assets.savings)/s:0,quickRatio:s>0?e.assets.checking/s:0,emergencyFundRatio:t.emergencyFundMonths},leverageRatios:{debtToAssetRatio:a>0?s/a*100:0,debtToIncomeRatio:t.debtToIncomeRatio,equityRatio:a>0?(a-s)/a*100:0},efficiencyRatios:{savingsRate:t.savingsRate,expenseRatio:n>0?i/n*100:0,investmentRate:n>0?e.behaviors.monthlyInvestmentContribution/n*100:0}}}static assessFinancialRisk(e,t){const n=[];return 0===e.income.secondaryIncome&&0===e.income.businessIncome&&n.push({category:"Income Concentration",level:"High",description:"Dependent on single income source",mitigation:"Develop multiple income streams or enhance job security"}),t.emergencyFundMonths<3&&n.push({category:"Liquidity Risk",level:"High",description:"Insufficient emergency funds",mitigation:"Build emergency fund to 6 months of expenses"}),t.creditUtilization>30&&n.push({category:"Credit Risk",level:"Medium",description:"High credit utilization",mitigation:"Pay down credit card balances or increase credit limits"}),{overallRiskLevel:"unknown",riskFactors:n}}static analyzeFinancialGoals(e,t){const n=e.personalInfo.age,i=e.goals.retirementAge-n,a=e.behaviors.monthlyInvestmentContribution;return{retirementReadiness:{yearsToRetirement:i,currentSavings:e.assets.employer401k+e.assets.traditionalIRA+e.assets.rothIRA,monthlyContribution:a,projectedValue:this.calculateRetirementProjection(e,t),onTrack:this.isRetirementOnTrack(e,t)},emergencyGoal:{target:6*this.getTotalMonthlyExpenses(e.expenses),current:e.assets.emergencyFund+e.assets.savings,progress:t.emergencyFundMonths/6*100,timeToGoal:this.calculateTimeToEmergencyGoal(e,t)}}}static calculateRetirementProjection(e,t){const n=e.personalInfo.age,i=e.goals.retirementAge-n,a=e.behaviors.monthlyInvestmentContribution;return(e.assets.employer401k+e.assets.traditionalIRA+e.assets.rothIRA)*Math.pow(1.07,i)+12*a*(Math.pow(1.07,i)-1)/.07}static isRetirementOnTrack(e,t){return this.calculateRetirementProjection(e,t)>=25*e.goals.retirementIncomeNeeded}static calculateTimeToEmergencyGoal(e,t){const n=6*this.getTotalMonthlyExpenses(e.expenses)-(e.assets.emergencyFund+e.assets.savings);return n<=0?"Goal achieved":t.monthlyCashFlow<=0?"Cannot achieve with current cash flow":`${Math.ceil(n/t.monthlyCashFlow)} months at current savings rate`}static calculatePeerBenchmarks(e){return{ageGroup:10*Math.floor(e.personalInfo.age/10)+"s",incomeGroup:"Middle Income",netWorthPercentile:50,savingsRatePercentile:45,debtRatioPercentile:55}}static getCreditScoreStatus(e){return e>=800?"excellent":e>=740?"good":e>=670?"fair":e>=580?"poor":"critical"}static getSpendingRecommendations(e){return e<5?["Immediate action needed: Create a strict budget to reduce expenses","Consider increasing income through side work or skills development","Review all subscriptions and discretionary spending"]:e<10?["Look for areas to cut unnecessary expenses","Consider ways to increase your income","Build an emergency fund as a priority"]:["Great job maintaining positive cash flow!"]}static getPaymentReliabilityRecommendations(e){return"often-late"===e||"sometimes-late"===e?["Set up automatic bill payments to improve payment history","Create a bill payment calendar with due dates","Consider consolidating due dates to simplify management"]:["Keep up the excellent payment history!"]}static getEmergencyFundRecommendations(e,t){if(("number"!=typeof e||isNaN(e)||e<0)&&(e=0),"number"!=typeof t||isNaN(t)||t<=0)return["Unable to calculate additional savings needed due to missing or invalid expense data. Please review your expense inputs."];if(e>=6)return["You have a strong emergency fund. Maintain your current savings habits."];if(e>=3)return["Your emergency fund is solid. Consider increasing to 6 months for extra security."];const n=Math.max(0,Math.round((3-e)*t));return isNaN(n)||n<0?["Unable to calculate additional savings needed due to invalid data."]:[`You currently have ${isNaN(e)?"N/A":e.toFixed(1)} months of expenses saved. While this is a good start, aiming for at least 3 months provides a much stronger safety net. You need to save approximately $${isNaN(n)?"N/A":n.toLocaleString()} more to reach this goal.`]}static getDebtManagementRecommendations(e){return e<.2?["Maintain your current debt management habits."]:e<.28?["Monitor your debt and avoid taking on new obligations."]:e<.36?["Reduce discretionary spending to free up cash for debt payments.","Prioritize paying down high-interest debt."]:e<.43?["Aggressively pay down debt to lower your debt-to-income ratio.","Consider debt consolidation or refinancing options."]:["Seek professional financial counseling or debt management assistance.","Create a strict debt reduction plan and avoid new debt."]}static getCreditHealthRecommendations(e,t){const n=[];return e<670&&(n.push("Focus on improving credit score through on-time payments"),n.push("Consider becoming an authorized user on a family member's account")),t>30&&(n.push("Reduce credit card balances to improve utilization ratio"),n.push("Consider paying down cards or requesting credit limit increases")),0===n.length&&n.push("Great credit health! Maintain current habits."),n}static getInsuranceRecommendations(e){const t=[];return e.healthInsurance||t.push("Get health insurance immediately - essential protection"),e.lifeInsurance||t.push("Consider life insurance to protect dependents"),e.shortTermDisability||e.longTermDisability||t.push("Consider disability insurance to protect your income"),0===t.length&&t.push("Good insurance coverage! Review annually to ensure adequacy."),t}static getRetirementRecommendations(e,t){const n=[];return 0===t?(n.push("Start investing for retirement immediately, even small amounts help"),n.push("Take advantage of employer 401(k) match if available")):t<500&&(n.push("Consider increasing retirement contributions"),n.push("Target 10-15% of income for retirement savings")),"very-confident"!==e.retirementConfidence&&(n.push("Meet with financial advisor to create retirement plan"),n.push("Use retirement calculators to estimate needs")),0===n.length&&n.push("Excellent retirement planning! Stay on track."),n}static getPlanningRecommendations(e,t){const n=[];return"no-budget"===e?(n.push("Start with basic expense tracking using apps or spreadsheets"),n.push("Create a simple budget to understand spending patterns")):"mental-budget"===e&&n.push("Move to written budget for better accuracy"),"never-plan"!==t&&"rarely-plan"!==t||(n.push("Set aside time monthly for financial planning"),n.push("Start with simple goal-setting and progress tracking")),0===n.length&&n.push("Great financial planning habits! Keep it up."),n}static getCreditUtilizationStatus(e){return e<=10?"excellent":e<=30?"good":e<=50?"fair":e<=80?"poor":"critical"}static formatConfidenceText(e){return e.replace(/-/g," ").replace(/\b\w/g,(e=>e.toUpperCase()))}static formatBudgetText(e){return{"detailed-budget":"Detailed Budget","simple-tracking":"Simple Tracking","mental-budget":"Mental Budget","no-budget":"No Budget"}[e]||e}static formatPlanningText(e){return{"actively-plan":"Actively Plan","occasionally-plan":"Occasionally Plan","rarely-plan":"Rarely Plan","never-plan":"Never Plan"}[e]||e}static validateUserData(e){console.log("🔍 Data Validation - Verifying actual user inputs:",{primarySalary:e.income.primarySalary,housing:e.expenses.housing,totalAssets:this.getTotalAssets(e.assets),totalLiabilities:this.getTotalLiabilities(e.liabilities),creditScore:e.liabilities.creditScore});const t=this.getTotalMonthlyIncome(e.income),n=this.getTotalMonthlyExpenses(e.expenses),i=t-n;if(console.log("🔍 Calculated Metrics from User Data:",{totalMonthlyIncome:t,totalMonthlyExpenses:n,monthlyCashFlow:i,emergencyFundMonths:n>0?(e.assets.checking+e.assets.savings+e.assets.emergencyFund)/n:0}),e.income.primarySalary<=0)throw new Error("Invalid data: Primary salary cannot be zero or negative");if(e.liabilities.creditScore<300||e.liabilities.creditScore>850)throw new Error("Invalid data: Credit score must be between 300 and 850");console.log("✅ Data validation passed - using actual user inputs")}}var s=n(72),o=n.n(s),r=n(825),l=n.n(r),c=n(659),d=n.n(c),m=n(56),u=n.n(m),p=n(540),h=n.n(p),g=n(113),y=n.n(g),b=n(373),f={};f.styleTagTransform=y(),f.setAttributes=u(),f.insert=d().bind(null,"head"),f.domAPI=l(),f.insertStyleElement=h(),o()(b.A,f),b.A&&b.A.locals&&b.A.locals;class v{constructor(e,t){this.container=e,this.currentStepIndex=0,this.formData={},this.steps=[],this.onDataChange=t?.onDataChange,this.onComplete=t?.onComplete,this.initializeSteps(),this.initializeFormData(),this.render()}initializeSteps(){this.steps=[{id:"personal-info",title:"Personal Information",description:"Tell us about yourself to personalize your analysis",fields:[{id:"age",type:"number",label:"Age",description:"Your current age",required:!0,value:30,validation:{min:18,max:100}},{id:"maritalStatus",type:"select",label:"Marital Status",required:!0,value:"single",options:[{value:"single",label:"Single"},{value:"married",label:"Married"},{value:"divorced",label:"Divorced"},{value:"widowed",label:"Widowed"}]},{id:"dependents",type:"number",label:"Number of Dependents",description:"Children or others who depend on you financially",required:!0,value:0,validation:{min:0,max:10}},{id:"employmentStatus",type:"select",label:"Employment Status",required:!0,value:"employed",options:[{value:"employed",label:"Employed"},{value:"self-employed",label:"Self-Employed"},{value:"unemployed",label:"Unemployed"},{value:"retired",label:"Retired"},{value:"student",label:"Student"}]},{id:"employmentTenure",type:"number",label:"Years at Current Job",description:"How long have you been in your current position?",required:!0,value:3,validation:{min:0,max:50}}],isComplete:!1,validationErrors:[]},{id:"income",title:"Income Sources",description:"All sources of monthly income",fields:[{id:"primarySalary",type:"number",label:"Primary Salary (Monthly)",description:"Your main job salary after taxes",required:!0,value:5e3,validation:{min:0,step:100}},{id:"secondaryIncome",type:"number",label:"Secondary Income (Monthly)",description:"Part-time work, freelancing, side hustles",required:!1,value:0,validation:{min:0,step:50}},{id:"businessIncome",type:"number",label:"Business Income (Monthly)",description:"Net income from business ownership",required:!1,value:0,validation:{min:0,step:100}},{id:"investmentIncome",type:"number",label:"Investment Income (Monthly)",description:"Dividends, interest, capital gains",required:!1,value:0,validation:{min:0,step:25}},{id:"rentalIncome",type:"number",label:"Rental Income (Monthly)",description:"Net rental income from properties",required:!1,value:0,validation:{min:0,step:100}},{id:"benefitsIncome",type:"number",label:"Benefits Income (Monthly)",description:"Social Security, disability, unemployment",required:!1,value:0,validation:{min:0,step:50}}],isComplete:!1,validationErrors:[]},{id:"expenses",title:"Monthly Expenses",description:"Break down your monthly spending",fields:[{id:"housing",type:"number",label:"Housing (Rent/Mortgage)",description:"Monthly housing payment",required:!0,value:1500,validation:{min:0,step:50}},{id:"utilities",type:"number",label:"Utilities",description:"Electric, gas, water, internet, phone",required:!0,value:200,validation:{min:0,step:25}},{id:"food",type:"number",label:"Food & Groceries",description:"Monthly food spending",required:!0,value:400,validation:{min:0,step:25}},{id:"transportation",type:"number",label:"Transportation",description:"Car payment, gas, insurance, public transit",required:!0,value:300,validation:{min:0,step:25}},{id:"healthcare",type:"number",label:"Healthcare",description:"Insurance premiums, copays, medications",required:!0,value:150,validation:{min:0,step:25}},{id:"entertainment",type:"number",label:"Entertainment",description:"Movies, subscriptions, hobbies",required:!1,value:100,validation:{min:0,step:25}},{id:"diningOut",type:"number",label:"Dining Out",description:"Restaurants, takeout, coffee",required:!1,value:150,validation:{min:0,step:25}}],isComplete:!1,validationErrors:[]},{id:"assets",title:"Assets & Savings",description:"Your current assets and investments",fields:[{id:"checking",type:"number",label:"Checking Account",description:"Current balance in checking",required:!0,value:2e3,validation:{min:0,step:100}},{id:"savings",type:"number",label:"Savings Account",description:"Current savings balance",required:!0,value:5e3,validation:{min:0,step:100}},{id:"emergencyFund",type:"number",label:"Emergency Fund",description:"Funds specifically for emergencies",required:!0,value:3e3,validation:{min:0,step:100}},{id:"employer401k",type:"number",label:"401(k) Balance",description:"Current 401k balance",required:!1,value:25e3,validation:{min:0,step:1e3}},{id:"traditionalIRA",type:"number",label:"Traditional IRA",description:"Traditional IRA balance",required:!1,value:0,validation:{min:0,step:1e3}},{id:"rothIRA",type:"number",label:"Roth IRA",description:"Roth IRA balance",required:!1,value:0,validation:{min:0,step:1e3}},{id:"brokerageAccounts",type:"number",label:"Brokerage Accounts",description:"Taxable investment accounts",required:!1,value:0,validation:{min:0,step:1e3}}],isComplete:!1,validationErrors:[]},{id:"liabilities",title:"Debts & Liabilities",description:"Your current debts and obligations",fields:[{id:"creditCardDebt",type:"number",label:"Credit Card Debt",description:"Total credit card balances",required:!0,value:2e3,validation:{min:0,step:100}},{id:"studentLoans",type:"number",label:"Student Loans",description:"Total student loan debt",required:!1,value:15e3,validation:{min:0,step:1e3}},{id:"autoLoans",type:"number",label:"Auto Loans",description:"Car loan balances",required:!1,value:8e3,validation:{min:0,step:500}},{id:"mortgageBalance",type:"number",label:"Mortgage Balance",description:"Remaining mortgage debt",required:!1,value:0,validation:{min:0,step:1e3}},{id:"personalLoans",type:"number",label:"Personal Loans",description:"Other personal debt",required:!1,value:0,validation:{min:0,step:500}},{id:"creditScore",type:"number",label:"Credit Score",description:"Your current credit score",required:!0,value:720,validation:{min:300,max:850}},{id:"totalCreditLimit",type:"number",label:"Total Credit Limit",description:"Combined credit card limits",required:!0,value:1e4,validation:{min:0,step:500}}],isComplete:!1,validationErrors:[]},{id:"goals-behavior",title:"Goals & Behavior",description:"Your financial goals and habits",fields:[{id:"retirementAge",type:"number",label:"Target Retirement Age",description:"When do you want to retire?",required:!0,value:65,validation:{min:50,max:80}},{id:"retirementIncomeNeeded",type:"number",label:"Monthly Retirement Income Goal",description:"How much monthly income do you want in retirement?",required:!0,value:4e3,validation:{min:1e3,step:500}},{id:"emergencyFundTarget",type:"number",label:"Emergency Fund Target",description:"Your target emergency fund amount",required:!0,value:1e4,validation:{min:1e3,step:1e3}},{id:"monthlyInvestmentContribution",type:"number",label:"Monthly Investment Contribution",description:"How much do you invest monthly?",required:!0,value:300,validation:{min:0,step:50}},{id:"riskTolerance",type:"select",label:"Risk Tolerance",required:!0,value:"moderate",options:[{value:"conservative",label:"Conservative - Prefer stability"},{value:"moderate",label:"Moderate - Balanced approach"},{value:"aggressive",label:"Aggressive - Higher risk for growth"}]},{id:"billPaymentReliability",type:"select",label:"Bill Payment History",required:!0,value:"usually-on-time",options:[{value:"always-on-time",label:"Always pay on time"},{value:"usually-on-time",label:"Usually pay on time"},{value:"sometimes-late",label:"Sometimes pay late"},{value:"often-late",label:"Often pay late"}]},{id:"budgetingMethod",type:"select",label:"Budgeting Method",required:!0,value:"simple-tracking",options:[{value:"detailed-budget",label:"Detailed budget tracking"},{value:"simple-tracking",label:"Simple expense tracking"},{value:"mental-budget",label:"Mental budget only"},{value:"no-budget",label:"No budgeting"}]}],isComplete:!1,validationErrors:[]}]}initializeFormData(){this.formData={personalInfo:{age:30,maritalStatus:"single",dependents:0,state:"CA",employmentStatus:"employed",employmentTenure:3,healthStatus:"good",healthInsurance:!0,lifeInsurance:!1,shortTermDisability:!1,longTermDisability:!1},income:{primarySalary:5e3,secondaryIncome:0,businessIncome:0,investmentIncome:0,rentalIncome:0,benefitsIncome:0,otherIncome:0,incomeGrowthRate:3,incomeVariability:"stable",effectiveTaxRate:22},expenses:{housing:1500,utilities:200,insurance:150,loanPayments:400,childcare:0,food:400,transportation:300,healthcare:150,clothing:100,personalCare:50,entertainment:100,diningOut:150,hobbies:50,subscriptions:50,shopping:100,travel:200,creditCardPayments:100,studentLoanPayments:200,otherDebtPayments:100},assets:{checking:2e3,savings:5e3,moneyMarket:0,emergencyFund:3e3,employer401k:25e3,traditionalIRA:0,rothIRA:0,brokerageAccounts:0,stocks:0,bonds:0,mutualFunds:0,primaryResidence:0,investmentProperties:0,cryptocurrency:0,preciousMetals:0,collectibles:0,businessEquity:0,otherAssets:0},liabilities:{mortgageBalance:0,homeEquityLoan:0,autoLoans:8e3,securedCreditLines:0,creditCardDebt:2e3,personalLoans:0,studentLoans:15e3,medicalDebt:0,businessLoans:0,businessCreditLines:0,taxDebt:0,legalJudgments:0,otherDebt:0,creditScore:720,totalCreditLimit:1e4},insurance:{healthInsurance:!0,healthDeductible:2e3,healthOutOfPocketMax:6e3,lifeInsurance:!1,lifeCoverageAmount:0,shortTermDisability:!1,longTermDisability:!1,disabilityCoveragePercent:0,homeInsurance:!1,autoInsurance:!0,umbrellaPolicy:!1,insuranceConfidence:"somewhat-confident"},goals:{emergencyFundTarget:1e4,debtPayoffGoal:!0,majorPurchaseAmount:5e3,homeDownPayment:0,educationFunding:0,careerChangeBuffer:0,retirementAge:65,retirementIncomeNeeded:4e3,legacyGoalAmount:0,retirementConfidence:"somewhat-confident",longTermGoalConfidence:"somewhat-confident",riskTolerance:"moderate",investmentExperience:"intermediate"},behaviors:{billPaymentReliability:"usually-on-time",budgetingMethod:"simple-tracking",financialPlanningEngagement:"occasionally-plan",automaticSavings:!0,monthlyInvestmentContribution:300,emergencyFundPriority:"high",impulseSpendingFrequency:"sometimes",expenseTrackingMethod:"casual"}}}render(){this.container.innerHTML=`\n            <div class="form-container">\n                <button class="btn-secondary return-home-btn" aria-label="Return to Home" tabindex="0" onclick="window.confirm('Are you sure you want to return to the home page? Unsaved data will be lost.') && window.location.reload();">Return to Home</button>\n                <div class="form-progress">\n                    <div class="progress-bar">\n                        <div class="progress-fill" style="width: ${(this.currentStepIndex+1)/this.steps.length*100}%"></div>\n                    </div>\n                    <div class="progress-text">Step ${this.currentStepIndex+1} of ${this.steps.length}</div>\n                </div>\n                \n                <div class="form-step-content">\n                    ${this.renderCurrentStep()}\n                </div>\n                \n                <div class="form-navigation">\n                    <button class="btn-secondary" id="prevBtn" ${0===this.currentStepIndex?"disabled":""}>\n                        Previous\n                    </button>\n                    <button class="btn-primary" id="nextBtn">\n                        ${this.currentStepIndex===this.steps.length-1?"Complete Analysis":"Next"}\n                    </button>\n                </div>\n            </div>\n        `,this.attachEventListeners()}renderCurrentStep(){const e=this.steps[this.currentStepIndex];return`\n            <div class="form-header">\n                <h2>${e.title}</h2>\n                <p>${e.description}</p>\n            </div>\n            \n            <div class="form-fields-grid">\n                ${e.fields.map((e=>this.renderField(e))).join("")}\n            </div>\n        `}renderField(e){const t=this.getFieldValue(e.id);switch(e.type){case"number":return`\n                    <div class="form-field">\n                        <label for="${e.id}" class="field-label">\n                            ${e.label}\n                            ${e.required?'<span class="required">*</span>':""}\n                        </label>\n                        ${e.description?`<p class="field-description">${e.description}</p>`:""}\n                        <input \n                            type="number" \n                            id="${e.id}" \n                            name="${e.id}"\n                            value="${t}"\n                            ${e.required?"required":""}\n                            ${void 0!==e.validation?.min?`min="${e.validation.min}"`:""}\n                            ${void 0!==e.validation?.max?`max="${e.validation.max}"`:""}\n                            ${void 0!==e.validation?.step?`step="${e.validation.step}"`:""}\n                        />\n                    </div>\n                `;case"select":return`\n                    <div class="form-field">\n                        <label for="${e.id}" class="field-label">\n                            ${e.label}\n                            ${e.required?'<span class="required">*</span>':""}\n                        </label>\n                        ${e.description?`<p class="field-description">${e.description}</p>`:""}\n                        <select id="${e.id}" name="${e.id}" ${e.required?"required":""}>\n                            ${e.options?.map((e=>`<option value="${e.value}" ${t===e.value?"selected":""}>${e.label}</option>`)).join("")}\n                        </select>\n                    </div>\n                `;default:return""}}getFieldValue(e){const t=this.formData[e];return"number"==typeof t&&(isNaN(t)||t<0)?0:t}attachEventListeners(){const e=this.container.querySelector("#prevBtn"),t=this.container.querySelector("#nextBtn");e?.addEventListener("click",(()=>this.previousStep())),t?.addEventListener("click",(()=>this.nextStep())),this.container.querySelectorAll("input, select").forEach((e=>{e.addEventListener("change",(e=>this.handleFieldChange(e)))}))}handleFieldChange(e){const t=e.target,n=t.id,i="number"===t.type?parseFloat(t.value):t.value,a=this.steps[this.currentStepIndex].fields.find((e=>e.id===n));a&&(a.value=i),this.updateFormData(n,i),this.onDataChange?.(this.formData)}updateFormData(e,t){switch(this.steps[this.currentStepIndex].id){case"personal-info":this.formData.personalInfo||(this.formData.personalInfo={}),this.formData.personalInfo[e]=t;break;case"income":this.formData.income||(this.formData.income={}),this.formData.income[e]=t;break;case"expenses":this.formData.expenses||(this.formData.expenses={}),this.formData.expenses[e]=t;break;case"assets":this.formData.assets||(this.formData.assets={}),this.formData.assets[e]=t;break;case"liabilities":this.formData.liabilities||(this.formData.liabilities={}),this.formData.liabilities[e]=t;break;case"goals-behavior":"retirementAge"===e||"retirementIncomeNeeded"===e||"emergencyFundTarget"===e||"riskTolerance"===e?(this.formData.goals||(this.formData.goals={}),this.formData.goals[e]=t):"monthlyInvestmentContribution"!==e&&"billPaymentReliability"!==e&&"budgetingMethod"!==e||(this.formData.behaviors||(this.formData.behaviors={}),this.formData.behaviors[e]=t)}}validateCurrentStep(){const e=this.steps[this.currentStepIndex],t=[];for(const n of e.fields)if(n.required&&(void 0===n.value||null===n.value||""===n.value&&"number"!==n.type||"number"===n.type&&isNaN(Number(n.value)))&&t.push(`${n.label} is required`),"number"===n.type&&n.validation&&void 0!==n.value&&null!==n.value&&""!==n.value){const e=parseFloat(n.value);isNaN(e)||(void 0!==n.validation.min&&e<n.validation.min&&t.push(`${n.label} must be at least ${n.validation.min}`),void 0!==n.validation.max&&e>n.validation.max&&t.push(`${n.label} must be at most ${n.validation.max}`))}return e.validationErrors=t,e.isComplete=0===t.length,0===t.length}previousStep(){this.currentStepIndex>0&&(this.currentStepIndex--,this.render())}nextStep(){this.validateCurrentStep()?this.currentStepIndex===this.steps.length-1?this.completeForm():(this.currentStepIndex++,this.render()):this.showValidationErrors()}showValidationErrors(){const e=this.steps[this.currentStepIndex];e.validationErrors.length>0&&alert("Please fix the following errors:\n"+e.validationErrors.join("\n"))}completeForm(){const e=this.buildCompleteUserData();this.onComplete&&this.onComplete(e)}buildCompleteUserData(){return this.formData}getCurrentData(){return this.formData}}class A{constructor(e,t){const n=document.getElementById(e);if(!n)throw new Error(`Element with ID ${e} not found`);this.container=n,this.onSubmit=t}render(){this.container.innerHTML=this.generateHTML(),this.attachEventListeners()}generateHTML(){return'\n            <div class="form-container">\n                <div class="form-header">\n                    <h2>Quick Financial Health Check</h2>\n                    <p class="form-description">\n                        Get a comprehensive financial analysis with just 6 essential inputs. \n                        Takes less than 2 minutes to complete.\n                    </p>\n                    <div class="progress-indicator">\n                        <div class="progress-bar">\n                            <div class="progress-fill" id="formProgress"></div>\n                        </div>\n                        <p class="progress-text">Complete all fields to analyze</p>\n                    </div>\n                </div>\n\n                <button class="btn-secondary return-home-btn" aria-label="Return to Home" tabindex="0" onclick="window.confirm(\'Are you sure you want to return to the home page? Unsaved data will be lost.\') && window.location.reload();">Return to Home</button>\n\n                <form id="quickAnalysisForm" class="quick-form">\n                    <div class="form-fields-grid">\n                        <div class="form-field" data-field="income">\n                            <label for="monthlyIncome" class="field-label">\n                                <span class="label-text">Monthly Take-Home Income</span>\n                                <span class="required">*</span>\n                                <span class="help-icon" data-tooltip="Your salary after taxes and deductions">?</span>\n                            </label>\n                            <div class="input-wrapper">\n                                <span class="currency-symbol">$</span>\n                                <input type="text"\n                                       inputmode="decimal" \n                                       id="monthlyIncome" \n                                       name="monthlyIncome" \n                                       placeholder="5,000"\n                                       min="0" \n                                       required \n                                       class="field-input currency-input"\n                                       data-format="currency">\n                                <div class="input-feedback"></div>\n                            </div>\n                            <p class="field-help">Your monthly income after taxes and deductions</p>\n                        </div>\n\n                        <div class="form-field" data-field="housing">\n                            <label for="monthlyHousing" class="field-label">\n                                <span class="label-text">Monthly Housing Cost</span>\n                                <span class="required">*</span>\n                                <span class="help-icon" data-tooltip="Rent or mortgage payment">?</span>\n                            </label>\n                            <div class="input-wrapper">\n                                <span class="currency-symbol">$</span>\n                                <input type="text"\n                                       inputmode="decimal"\n                                       id="monthlyHousing" \n                                       name="monthlyHousing" \n                                       placeholder="1,500"\n                                       min="0" \n                                       required \n                                       class="field-input currency-input"\n                                       data-format="currency">\n                                <div class="input-feedback"></div>\n                            </div>\n                            <p class="field-help">Rent or mortgage payment (excluding utilities)</p>\n                        </div>\n\n                        <div class="form-field" data-field="expenses">\n                            <label for="monthlyExpenses" class="field-label">\n                                <span class="label-text">Other Monthly Expenses</span>\n                                <span class="required">*</span>\n                                <span class="help-icon" data-tooltip="Food, transportation, utilities, entertainment, etc.">?</span>\n                            </label>\n                            <div class="input-wrapper">\n                                <span class="currency-symbol">$</span>\n                                <input type="text"\n                                       inputmode="decimal"\n                                       id="monthlyExpenses" \n                                       name="monthlyExpenses" \n                                       placeholder="2,000"\n                                       min="0" \n                                       required \n                                       class="field-input currency-input"\n                                       data-format="currency">\n                                <div class="input-feedback"></div>\n                            </div>\n                            <p class="field-help">Food, transportation, utilities, entertainment, etc.</p>\n                            <div class="expense-breakdown">\n                                <small>Typical breakdown: Food (30%), Transportation (25%), Utilities (15%), Other (30%)</small>\n                            </div>\n                        </div>\n\n                        <div class="form-field" data-field="savings">\n                            <label for="totalSavings" class="field-label">\n                                <span class="label-text">Total Savings & Emergency Fund</span>\n                                <span class="required">*</span>\n                                <span class="help-icon" data-tooltip="All liquid savings including emergency fund">?</span>\n                            </label>\n                            <div class="input-wrapper">\n                                <span class="currency-symbol">$</span>\n                                <input type="text"\n                                       inputmode="decimal"\n                                       id="totalSavings" \n                                       name="totalSavings" \n                                       placeholder="15,000"\n                                       min="0" \n                                       required \n                                       class="field-input currency-input"\n                                       data-format="currency">\n                                <div class="input-feedback"></div>\n                            </div>\n                            <p class="field-help">Checking, savings, emergency fund (liquid assets)</p>\n                            <div class="savings-indicator">\n                                <small>Emergency fund goal: <span id="emergencyGoal">--</span> months of expenses</small>\n                            </div>\n                        </div>\n\n                        <div class="form-field" data-field="debt">\n                            <label for="totalDebt" class="field-label">\n                                <span class="label-text">Total Debt</span>\n                                <span class="required">*</span>\n                                <span class="help-icon" data-tooltip="Credit cards, student loans, car loans (excluding mortgage)">?</span>\n                            </label>\n                            <div class="input-wrapper">\n                                <span class="currency-symbol">$</span>\n                                <input type="text"\n                                       inputmode="decimal"\n                                       id="totalDebt" \n                                       name="totalDebt" \n                                       placeholder="25,000"\n                                       min="0" \n                                       required \n                                       class="field-input currency-input"\n                                       data-format="currency">\n                                <div class="input-feedback"></div>\n                            </div>\n                            <p class="field-help">Credit cards, student loans, car loans (excluding mortgage)</p>\n                            <div class="debt-ratio-indicator">\n                                <small>Debt-to-income ratio: <span id="debtRatio">--</span></small>\n                            </div>\n                        </div>\n\n                        <div class="form-field" data-field="credit">\n                            <label for="creditScore" class="field-label">\n                                <span class="label-text">Credit Score</span>\n                                <span class="required">*</span>\n                                <span class="help-icon" data-tooltip="Your current credit score (300-850)">?</span>\n                            </label>\n                            <div class="input-wrapper">\n                                <input type="number" \n                                       id="creditScore" \n                                       name="creditScore" \n                                       placeholder="720"\n                                       min="300" \n                                       max="850" \n                                       required \n                                       class="field-input">\n                                <div class="input-feedback"></div>\n                            </div>\n                            <p class="field-help">Your current credit score (300-850)</p>\n                            <div class="credit-range">\n                                <div class="range-indicator">\n                                    <span class="range poor">300-579</span>\n                                    <span class="range fair">580-669</span>\n                                    <span class="range good">670-739</span>\n                                    <span class="range excellent">740-850</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="form-actions">\n                        <button type="submit" class="btn btn-primary btn-large" id="analyzeButton" disabled>\n                            <span class="btn-icon">📊</span>\n                            <span class="btn-text">Analyze My Financial Health</span>\n                            <div class="btn-loader" style="display: none;">\n                                <div class="spinner"></div>\n                            </div>\n                        </button>\n                        <p class="analysis-note">\n                            Get instant insights into your financial health with personalized recommendations\n                        </p>\n                    </div>\n\n                    <div class="validation-errors" id="validationErrors" style="display: none;">\n                        \x3c!-- Error messages will be inserted here --\x3e\n                    </div>\n                </form>\n\n                <div class="form-benefits">\n                    <h3>What You\'ll Get:</h3>\n                    <ul class="benefits-list">\n                        <li>\n                            <span class="benefit-icon">📈</span>\n                            <span>Overall Financial Health Score based on your actual data</span>\n                        </li>\n                        <li>\n                            <span class="benefit-icon">💡</span>\n                            <span>8 Key Health Indicators with clear explanations</span>\n                        </li>\n                        <li>\n                            <span class="benefit-icon">🎯</span>\n                            <span>Prioritized action recommendations</span>\n                        </li>\n                        <li>\n                            <span class="benefit-icon">📊</span>\n                            <span>Comparison to people in your age and income group</span>\n                        </li>\n                        <li>\n                            <span class="benefit-icon">🔮</span>\n                            <span>Projections for your financial future</span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        '}attachEventListeners(){const e=this.container.querySelector("#quickAnalysisForm");e&&(e.addEventListener("submit",(e=>{e.preventDefault(),this.handleSubmit()})),e.querySelectorAll("input[required]").forEach((e=>{e.addEventListener("input",(e=>{this.handleInputChange(e.target)})),e.addEventListener("blur",(e=>{const t=e.target;"currency"===t.dataset.format&&this.formatCurrencyInput(t),this.validateField(t)}))})),this.attachTooltips())}handleInputChange(e){this.updateRealTimeCalculations(),this.updateProgress(),this.updateSubmitButton()}formatCurrencyInput(e){const t=e.value.replace(/[^0-9.]/g,""),n=parseFloat(t)||0;e.value=n>0?n.toLocaleString("en-US",{maximumFractionDigits:0}):"0"}updateRealTimeCalculations(){const e=this.getNumericValue("monthlyIncome"),t=this.getNumericValue("monthlyHousing"),n=this.getNumericValue("monthlyExpenses"),i=this.getNumericValue("totalSavings"),a=this.getNumericValue("totalDebt"),s=t+n,o=document.getElementById("emergencyGoal");if(o)if(s>0&&i>=0){const e=i/s;o.textContent=isNaN(e)?"N/A":e.toFixed(1),o.className=!isNaN(e)&&e>=3?"good":"needs-improvement"}else o.textContent="N/A",o.className="";const r=document.getElementById("debtRatio");if(e>0){let t=0;a>0?(t=a/(12*e)*100,r&&(r.textContent=`${t.toFixed(1)}%`,r.className=t<=36?"good":"needs-improvement")):0===a&&r&&(r.textContent="No debt! 🎉",r.className="good")}else r&&(r.textContent="N/A",r.className="")}getNumericValue(e){const t=Number(this.container.querySelector(`[name="${e}"]`)?.value);return"number"!=typeof t||isNaN(t)||t<0?0:t}updateProgress(){const e=this.container.querySelector("#quickAnalysisForm").querySelectorAll("input[required]");let t=0;e.forEach((e=>{""!==e.value.trim()&&t++}));const n=t/e.length*100,i=document.getElementById("formProgress"),a=this.container.querySelector(".progress-text");i&&(i.style.width=`${n}%`),a&&(a.textContent=100===n?"Ready to analyze!":`${t}/${e.length} fields completed`)}updateSubmitButton(){const e=this.container.querySelector("#quickAnalysisForm"),t=document.getElementById("analyzeButton"),n=e.querySelectorAll("input[required]");let i=!0;n.forEach((e=>{const t=e;t.value.trim()&&t.checkValidity()||(i=!1)})),t.disabled=!i,t.classList.toggle("ready",i)}validateField(e){const t=e.closest(".form-field"),n=t?.querySelector(".input-feedback");if(!n)return;let i=!0,a="";const s=this.getNumericValue(e.name),o=e.name;e.required&&""===e.value.trim()?(i=!1,a="This field is required"):s<0?(i=!1,a="Value cannot be negative"):"creditScore"===o&&(s<300||s>850)&&(i=!1,a="Credit score must be between 300 and 850"),t?.classList.toggle("field-valid",i),t?.classList.toggle("field-error",!i),n&&(n.textContent=a,n.style.display=a?"block":"none")}attachTooltips(){this.container.querySelectorAll(".help-icon").forEach((e=>{e.addEventListener("mouseenter",(e=>{const t=e.target.dataset.tooltip;t&&this.showTooltip(e.target,t)})),e.addEventListener("mouseleave",(()=>{this.hideTooltip()}))}))}showTooltip(e,t){this.hideTooltip();const n=document.createElement("div");n.className="tooltip",n.textContent=t,document.body.appendChild(n);const i=e.getBoundingClientRect(),a=i.top+window.scrollY-10,s=i.left+i.width/2;n.style.left=`${s}px`,n.style.top=`${a}px`,n.style.transform="translate(-50%, -100%)"}hideTooltip(){const e=document.querySelector(".tooltip");e&&e.remove()}handleSubmit(){const e=this.container.querySelector("#quickAnalysisForm"),t=new FormData(e),n=document.getElementById("analyzeButton"),i=n.querySelector(".btn-text"),a=n.querySelector(".btn-loader");i&&a&&(i.style.display="none",a.style.display="block"),n.disabled=!0;const s=e.querySelectorAll("input[required]"),o=[];if(s.forEach((e=>{this.validateField(e);const t=e.closest(".form-field");if(t?.classList.contains("field-error")){const e=t.querySelector(".input-feedback");if(e&&e.textContent){const n=t.querySelector(".label-text")?.textContent||"Field";o.push(`<strong>${n}:</strong> ${e.textContent}`)}}})),o.length>0)return this.showValidationErrors(o),void this.resetSubmitButton();const r=this.container.querySelector("#validationErrors");r&&(r.style.display="none");const l=this.buildUserDataFromForm(t);console.log("🔍 Quick Analysis - Using actual user data:",{monthlyIncome:l.income.primarySalary,monthlyHousing:l.expenses.housing,monthlyExpenses:l.expenses.food+l.expenses.transportation+l.expenses.utilities,totalSavings:l.assets.checking+l.assets.savings+l.assets.emergencyFund,totalDebt:l.liabilities.creditCardDebt+l.liabilities.autoLoans+l.liabilities.studentLoans,creditScore:l.liabilities.creditScore}),this.onSubmit(l)}resetSubmitButton(){const e=document.getElementById("analyzeButton"),t=e.querySelector(".btn-text"),n=e.querySelector(".btn-loader");t&&n&&(t.style.display="block",n.style.display="none"),e.disabled=!1}buildUserDataFromForm(e){const t=parseFloat(e.get("monthlyIncome").replace(/[,$]/g,""))||0,n=parseFloat(e.get("monthlyHousing").replace(/[,$]/g,""))||0,i=parseFloat(e.get("monthlyExpenses").replace(/[,$]/g,""))||0,a=parseFloat(e.get("totalSavings").replace(/[,$]/g,""))||0,s=parseFloat(e.get("totalDebt").replace(/[,$]/g,""))||0,o=parseFloat(e.get("creditScore"))||300;if(0===t)throw new Error("Monthly income is required and cannot be zero");return{personalInfo:{age:35,maritalStatus:"single",dependents:0,state:"CA",employmentStatus:"employed",employmentTenure:3,healthStatus:"good",healthInsurance:!0,lifeInsurance:!1,shortTermDisability:!1,longTermDisability:!1},income:{primarySalary:t,secondaryIncome:0,businessIncome:0,investmentIncome:0,rentalIncome:0,benefitsIncome:0,otherIncome:0,incomeGrowthRate:.03,incomeVariability:"stable",effectiveTaxRate:.22},expenses:{housing:n,utilities:0,insurance:0,loanPayments:0,childcare:0,food:0,transportation:0,healthcare:0,clothing:0,personalCare:0,entertainment:0,diningOut:0,hobbies:0,subscriptions:0,shopping:0,travel:0,creditCardPayments:0,studentLoanPayments:0,otherDebtPayments:0},assets:{checking:a,savings:0,moneyMarket:0,emergencyFund:0,employer401k:0,traditionalIRA:0,rothIRA:0,brokerageAccounts:0,stocks:0,bonds:0,mutualFunds:0,primaryResidence:0,investmentProperties:0,cryptocurrency:0,preciousMetals:0,collectibles:0,businessEquity:0,otherAssets:0},liabilities:{mortgageBalance:0,homeEquityLoan:0,autoLoans:0,securedCreditLines:0,creditCardDebt:s,personalLoans:0,studentLoans:0,medicalDebt:0,businessLoans:0,businessCreditLines:0,taxDebt:0,legalJudgments:0,otherDebt:0,creditScore:o,totalCreditLimit:0},insurance:{healthInsurance:!0,healthDeductible:0,healthOutOfPocketMax:0,lifeInsurance:!1,lifeCoverageAmount:0,shortTermDisability:!1,longTermDisability:!1,disabilityCoveragePercent:0,homeInsurance:!1,autoInsurance:!1,umbrellaPolicy:!1,insuranceConfidence:"somewhat-confident"},goals:{emergencyFundTarget:0,debtPayoffGoal:s>0,majorPurchaseAmount:0,homeDownPayment:0,educationFunding:0,careerChangeBuffer:0,retirementAge:65,retirementIncomeNeeded:0,legacyGoalAmount:0,retirementConfidence:"somewhat-confident",longTermGoalConfidence:"somewhat-confident",riskTolerance:"moderate",investmentExperience:"intermediate"},behaviors:{billPaymentReliability:o>750?"always-on-time":o>650?"usually-on-time":"sometimes-late",budgetingMethod:"simple-tracking",financialPlanningEngagement:"occasionally-plan",automaticSavings:a>t,monthlyInvestmentContribution:0,emergencyFundPriority:a<3*(n+i)?"high":"medium",impulseSpendingFrequency:"sometimes",expenseTrackingMethod:"casual"}}}showValidationErrors(e){const t=this.container.querySelector("#validationErrors");t&&(t.innerHTML=`\n                <div class="error-messages">\n                    <h4>Please fix the following errors:</h4>\n                    <ul>\n                        ${e.map((e=>`<li>${e}</li>`)).join("")}\n                    </ul>\n                </div>\n            `,t.style.display="block")}}class x{constructor(e){const t=document.getElementById(e);if(!t)throw new Error(`Element with ID ${e} not found`);this.container=t}render(e){e&&"object"==typeof e?(this.container.innerHTML="",this.container.className="form-container enhanced-results-display",this.container.setAttribute("aria-label","Financial Health Analysis Results"),this.container.innerHTML=`\n          <section class="results-section" aria-labelledby="score-heading">\n            ${this.generateOverallScoreSection(e)}\n          </section>\n          <section class="results-section" aria-labelledby="insights-heading">\n            ${this.generateKeyInsightsSection(e)}\n          </section>\n          <section class="results-section" aria-labelledby="action-plan-heading">\n            ${this.generateActionPlanSection(e)}\n          </section>\n        `,this.attachInteractiveElements()):this.container.innerHTML='<div class="error-message">No analysis data available.</div>'}generateOverallScoreSection(e){const t="number"!=typeof e.overallHealthScore||isNaN(e.overallHealthScore)?"N/A":e.overallHealthScore,n=e.healthLevel;let i="";switch(n){case"excellent":i="Excellent: You are in outstanding financial health.";break;case"good":i="Good: You are on track, with a few areas to optimize.";break;case"fair":i="Fair: There are some areas to improve.";break;case"limited":i="Limited: Take action to improve your financial health.";break;case"critical":i="Critical: Immediate action is needed.";break;default:i=""}return`\n          <div class="score-section form-header" style="text-align:center; margin-bottom:24px;">\n            <h2 id="score-heading">Financial Health Score</h2>\n            <div class="score-circle" style="display:inline-block; width:100px; height:100px; border-radius:50%; background:${this.getScoreColor(n)}; color:#fff; font-size:2.2rem; line-height:100px; font-weight:bold;">${t}</div>\n            <div class="score-explanation">${i}</div>\n            <div class="score-peer" style="display:none;"></div>\n          </div>\n        `}generateKeyInsightsSection(e){const t=e.keyMetrics,n=t.savingsRateBreakdown,i=[];return"number"==typeof t.emergencyFundMonths&&i.push({icon:t.emergencyFundMonths>=3?"💰":"⚠️",headline:"Emergency Fund",value:0===t.emergencyFundMonths?"No savings":`${t.emergencyFundMonths.toFixed(1)} months`,explanation:t.emergencyFundMonths>=3?"You have a solid emergency fund.":"Aim for 3-6 months of expenses saved.",positive:t.emergencyFundMonths>=3,breakdown:"Liquid assets (checking, savings, money market, emergency fund) divided by total monthly expenses.",breakdownId:"breakdown-emergency-fund"}),"number"==typeof t.debtToIncomeRatio&&t.dtiBreakdown&&i.push({icon:0===t.debtToIncomeRatio?"✅":t.debtToIncomeRatio<=36?"👍":"⚠️",headline:"Debt-to-Income",value:`${t.debtToIncomeRatio.toFixed(1)}%`,explanation:0===t.debtToIncomeRatio?"No debt: Great job!":t.debtToIncomeRatio<=36?"Your debt is in a healthy range.":"Try to keep debt below 36% of income.",positive:t.debtToIncomeRatio<=36,breakdown:`DTI = Total Debt ($${t.dtiBreakdown.totalDebt.toLocaleString()}) / Gross Monthly Income ($${t.dtiBreakdown.totalIncome.toLocaleString()}) × 100 = <strong>${t.dtiBreakdown.debtToIncomeRatio.toFixed(1)}%</strong>.<br>Industry standard: <a href='https://www.consumerfinance.gov/ask-cfpb/what-is-a-debt-to-income-ratio-en-1791/' target='_blank' rel='noopener'>CFPB</a>`,breakdownId:"breakdown-dti"}),"number"==typeof t.netWorth&&t.netWorthBreakdown&&i.push({icon:t.netWorth>0?"💸":"⚠️",headline:"Net Worth",value:`$${t.netWorth.toLocaleString()}`,explanation:t.netWorth>0?"Positive net worth: You own more than you owe.":"Negative net worth: Focus on reducing liabilities and building assets.",positive:t.netWorth>0,breakdown:`Net Worth = Total Assets ($${t.netWorthBreakdown.totalAssets.toLocaleString()}) - Total Liabilities ($${t.netWorthBreakdown.totalLiabilities.toLocaleString()}) = <strong>$${t.netWorthBreakdown.netWorth.toLocaleString()}</strong>.<br>Industry standard: <a href='https://www.nerdwallet.com/article/finance/net-worth-calculator' target='_blank' rel='noopener'>NerdWallet</a>`,breakdownId:"breakdown-net-worth"}),"number"==typeof t.savingsRate&&n&&i.push({icon:t.savingsRate>=10?"💡":"⚠️",headline:"Savings Rate",value:`${t.savingsRate.toFixed(1)}%`,explanation:t.savingsRate>=10?"Good savings rate.":"Aim to save at least 10% of income.",positive:t.savingsRate>=10,breakdown:`Savings Rate = Savings ($${n.savings.toLocaleString()}) / Total Income ($${n.totalIncome.toLocaleString()}) × 100 = <strong>${n.savingsRate.toFixed(1)}%</strong>.`,breakdownId:"breakdown-savings-rate"}),`\n        <div class="key-insights" style="display:flex;flex-wrap:wrap;gap:1rem;justify-content:center;">\n            ${i.map((e=>`\n                <div class="insight-card" style="flex:1 1 220px;min-width:180px;max-width:260px;background:#fff;border-radius:12px;box-shadow:0 2px 8px rgba(0,0,0,0.06);padding:1rem;display:flex;flex-direction:column;align-items:center;position:relative;">\n                    <span class="insight-icon" aria-label="${e.headline}" style="font-size:2rem;">${e.icon}</span>\n                    <div class="insight-headline" style="font-weight:600;font-size:1.1rem;margin-top:0.5rem;display:flex;align-items:center;gap:0.3rem;">\n                        ${e.headline}\n                        <button class="info-toggle" aria-expanded="false" aria-controls="${e.breakdownId}" tabindex="0" title="How is this calculated?" style="background:none;border:none;cursor:pointer;font-size:1.1rem;color:#2563eb;outline:none;" data-breakdown-id="${e.breakdownId}">&#9432;</button>\n                    </div>\n                    <div class="insight-value" style="font-size:1.3rem;font-weight:bold;margin:0.5rem 0;">${e.value}</div>\n                    <div class="insight-explanation" style="font-size:0.98rem;color:${e.positive?"#10b981":"#ef4444"};">${e.explanation}</div>\n                    <div class="insight-breakdown breakdown-collapsible" id="${e.breakdownId}" style="display:none;margin-top:0.5rem;font-size:0.92rem;background:#f3f4f6;padding:0.7rem 0.8rem;border-radius:8px;">${e.breakdown||""}</div>\n                </div>\n            `)).join("")}\n        </div>\n        <style>\n        @media (max-width: 600px) {\n            .key-insights { flex-direction:column; align-items:stretch; }\n            .insight-card { min-width:unset; max-width:unset; width:100%; }\n        }\n        .info-toggle:focus { outline: 2px solid #2563eb; }\n        </style>\n        `}generateActionPlanSection(e){const t=e.prioritizedRecommendations||[];return t.length?`<div class="action-plan-section" aria-labelledby="action-plan-heading">\n          <h2 id="action-plan-heading" style="font-size:1.2rem; margin-bottom:8px;">Personalized Action Plan</h2>\n          <ol class="action-plan-list" style="list-style:none; padding:0; margin:0;">\n            ${t.map(((e,t)=>`\n              <li class="action-step-card" style="margin-bottom:18px; background:#f3f4f6; border-radius:10px; padding:16px; display:flex; align-items:flex-start; gap:1rem;">\n                <span class="step-icon" aria-label="Step ${t+1}" style="font-size:1.5rem; color:#3b82f6; font-weight:bold;">${t+1}</span>\n                <div style="flex:1;">\n                  <div style="font-weight:600; color:#2563eb; font-size:1.05rem;">${e.title}</div>\n                  <div style="font-size:0.98rem; color:#444; margin-bottom:4px;">${e.description}</div>\n                  <ul style="margin:0 0 0 16px; padding:0; color:#374151; font-size:0.97rem;">\n                    ${e.actionSteps.map((e=>`<li style="margin-bottom:2px;">${e}</li>`)).join("")}\n                  </ul>\n                  <div style="font-size:0.9rem; color:#888; margin-top:4px;">Timeframe: ${this.formatTimeframe(e.timeframe)} | Impact: ${this.formatImpact(e.impactLevel)}</div>\n                </div>\n              </li>\n            `)).join("")}\n          </ol>\n        </div>`:'<div class="action-plan-section" aria-labelledby="action-plan-heading" style="text-align:center; padding:24px 0;">\n              <h2 id="action-plan-heading" style="font-size:1.2rem; margin-bottom:8px;">Personalized Action Plan</h2>\n              <div style="color:#10b981; font-size:1.1rem;">You\'re on track! No urgent actions needed.</div>\n            </div>'}attachInteractiveElements(){this.container.querySelectorAll(".info-toggle").forEach((e=>{e.addEventListener("click",(e=>{const t=e.currentTarget.getAttribute("data-breakdown-id");if(!t)return;const n=this.container.querySelector(`#${t}`);if(n){const t="block"===n.style.display;n.style.display=t?"none":"block",e.currentTarget.setAttribute("aria-expanded",(!t).toString())}})),e.addEventListener("keydown",(t=>{const n=t;"Enter"!==n.key&&" "!==n.key||(n.preventDefault(),e.click())}))}))}formatTimeframe(e){return{immediate:"This Week","short-term":"1-3 Months","medium-term":"3-12 Months","long-term":"1+ Years"}[e]||e}formatImpact(e){return{high:"High",medium:"Medium",low:"Low"}[e]||e}getScoreColor(e){return{excellent:"#10b981",good:"#3b82f6",fair:"#f59e0b",limited:"#ef4444",critical:"#ef4444"}[e]||"#555"}}class C{constructor(){this.currentAnalysisType=null,this.initializeDOMElements(),this.attachEventListeners(),this.showAnalysisChoice()}initializeDOMElements(){if(this.analysisChoiceContainer=document.getElementById("analysisChoiceContainer")||void 0,this.formContainer=document.getElementById("formContainer")||void 0,this.resultsContainer=document.getElementById("resultsContainer")||void 0,!this.analysisChoiceContainer||!this.formContainer||!this.resultsContainer)throw new Error("Required DOM elements not found")}attachEventListeners(){const e=document.getElementById("chooseQuickAnalysis"),t=document.getElementById("chooseComprehensiveAnalysis");e&&e.addEventListener("click",(()=>{this.startQuickAnalysis()})),t&&t.addEventListener("click",(()=>{this.startComprehensiveAnalysis()}))}showAnalysisChoice(){this.analysisChoiceContainer&&this.formContainer&&this.resultsContainer&&(this.analysisChoiceContainer.style.display="block",this.formContainer.style.display="none",this.resultsContainer.style.display="none")}startQuickAnalysis(){this.currentAnalysisType="quick",this.showFormContainer(),this.formContainer&&(this.formContainer.innerHTML='<div id="quickFormContainer"></div>',this.quickForm=new A("quickFormContainer",(e=>{this.handleFormSubmission(e)})),this.quickForm.render())}startComprehensiveAnalysis(){if(this.currentAnalysisType="comprehensive",this.showFormContainer(),this.formContainer){this.formContainer.innerHTML='<div id="multiStepFormContainer"></div>';const e=document.getElementById("multiStepFormContainer");e&&(this.multiStepForm=new v(e,{onComplete:e=>{this.handleFormSubmission(e)}}))}}showFormContainer(){this.analysisChoiceContainer&&this.formContainer&&this.resultsContainer&&(this.analysisChoiceContainer.style.display="none",this.formContainer.style.display="block",this.resultsContainer.style.display="none")}async handleFormSubmission(e){try{this.showLoadingState();const t=await this.performAnalysis(e);this.displayResults(t)}catch(e){this.showError("Analysis failed. Please try again.")}}showLoadingState(){if(this.formContainer&&this.resultsContainer){this.formContainer.style.display="none",this.resultsContainer.style.display="block";const e=document.getElementById("loadingIndicator"),t=document.getElementById("analysisResults");e&&t&&(e.style.display="block",t.style.display="none",e.setAttribute("role","status"),e.setAttribute("aria-live","polite"))}}async performAnalysis(e){return await new Promise((e=>setTimeout(e,1500))),a.analyzeFinancialHealth(e)}displayResults(e){const t=document.getElementById("loadingIndicator"),n=document.getElementById("analysisResults");if(t&&n&&(t.style.display="none",n.style.display="block"),this.resultsContainer){const t=document.getElementById("analysisResults");t&&(t.innerHTML='<div id="enhancedResults"></div>',this.resultsDisplay=new x("enhancedResults"),this.resultsDisplay.render(e))}this.addResultsNavigation()}addResultsNavigation(){const e=document.getElementById("enhancedResults");if(e){const t=`\n                <div class="results-navigation">\n                    <div class="nav-actions">\n                        <button class="btn btn-outline" id="startNewAnalysis" aria-label="Start New Analysis">\n                            📊 Start New Analysis\n                        </button>\n                    </div>\n                    <div class="analysis-info">\n                        <p class="analysis-type">\n                            Analysis Type: <strong>${"quick"===this.currentAnalysisType?"Quick Analysis":"Comprehensive Analysis"}</strong>\n                        </p>\n                        <p class="analysis-date">\n                            Generated: <strong>${(new Date).toLocaleDateString()}</strong>\n                        </p>\n                    </div>\n                </div>\n            `;e.insertAdjacentHTML("beforeend",t);const n=document.getElementById("startNewAnalysis");n&&n.addEventListener("click",(()=>{this.resetApplication()}))}}resetApplication(){this.currentAnalysisType=null,this.multiStepForm&&(this.multiStepForm=void 0),this.quickForm&&(this.quickForm=void 0),this.resultsDisplay&&(this.resultsDisplay=void 0),this.showAnalysisChoice()}showError(e){const t=document.createElement("div");t.className="error-toast",t.setAttribute("role","alert"),t.innerHTML=`\n            <div class="toast-content">\n                <span class="toast-icon">❌</span>\n                <span class="toast-message">${e}</span>\n            </div>\n        `,document.body.appendChild(t),setTimeout((()=>{t.parentNode&&t.parentNode.removeChild(t)}),5e3)}}document.addEventListener("DOMContentLoaded",(()=>{new C}))})();
//# sourceMappingURL=bundle.js.map